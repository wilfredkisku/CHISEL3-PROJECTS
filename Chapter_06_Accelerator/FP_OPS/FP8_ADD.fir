circuit FP8_ADD :
  module FP8_ADD :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip inputA : UInt<8>, flip inputB : UInt<8>, output : UInt<8>}

    node signA = bits(io.inputA, 7, 7) @[FP8_ADD.scala 13:18]
    node expA = bits(io.inputA, 6, 2) @[FP8_ADD.scala 14:22]
    node sigA = bits(io.inputA, 1, 0) @[FP8_ADD.scala 15:25]
    node signB = bits(io.inputB, 7, 7) @[FP8_ADD.scala 13:18]
    node expB = bits(io.inputB, 6, 2) @[FP8_ADD.scala 14:22]
    node sigB = bits(io.inputB, 1, 0) @[FP8_ADD.scala 15:25]
    node _infFlagA_T = eq(expA, UInt<5>("h1f")) @[FP8_ADD.scala 24:23]
    node _infFlagA_T_1 = eq(sigA, UInt<1>("h0")) @[FP8_ADD.scala 24:46]
    node infFlagA = and(_infFlagA_T, _infFlagA_T_1) @[FP8_ADD.scala 24:38]
    node _infFlagB_T = eq(expB, UInt<5>("h1f")) @[FP8_ADD.scala 25:23]
    node _infFlagB_T_1 = eq(sigB, UInt<1>("h0")) @[FP8_ADD.scala 25:46]
    node infFlagB = and(_infFlagB_T, _infFlagB_T_1) @[FP8_ADD.scala 25:38]
    node _zeroFlagA_T = eq(expA, UInt<1>("h0")) @[FP8_ADD.scala 28:24]
    node _zeroFlagA_T_1 = eq(sigA, UInt<1>("h0")) @[FP8_ADD.scala 28:47]
    node zeroFlagA = and(_zeroFlagA_T, _zeroFlagA_T_1) @[FP8_ADD.scala 28:39]
    node _zeroFlagB_T = eq(expB, UInt<1>("h0")) @[FP8_ADD.scala 29:24]
    node _zeroFlagB_T_1 = eq(sigB, UInt<1>("h0")) @[FP8_ADD.scala 29:47]
    node zeroFlagB = and(_zeroFlagB_T, _zeroFlagB_T_1) @[FP8_ADD.scala 29:39]
    node _nanFlagA_T = eq(expA, UInt<5>("h1f")) @[FP8_ADD.scala 32:23]
    node _nanFlagA_T_1 = neq(sigA, UInt<1>("h0")) @[FP8_ADD.scala 32:46]
    node nanFlagA = and(_nanFlagA_T, _nanFlagA_T_1) @[FP8_ADD.scala 32:38]
    node _nanFlagB_T = eq(expB, UInt<5>("h1f")) @[FP8_ADD.scala 33:23]
    node _nanFlagB_T_1 = neq(sigB, UInt<1>("h0")) @[FP8_ADD.scala 33:46]
    node nanFlagB = and(_nanFlagB_T, _nanFlagB_T_1) @[FP8_ADD.scala 33:38]
    node _subFlagA_T = eq(expA, UInt<1>("h0")) @[FP8_ADD.scala 36:23]
    node _subFlagA_T_1 = neq(sigA, UInt<1>("h0")) @[FP8_ADD.scala 36:46]
    node subFlagA = and(_subFlagA_T, _subFlagA_T_1) @[FP8_ADD.scala 36:38]
    node _subFlagB_T = eq(expB, UInt<1>("h0")) @[FP8_ADD.scala 37:23]
    node _subFlagB_T_1 = neq(sigB, UInt<1>("h0")) @[FP8_ADD.scala 37:46]
    node subFlagB = and(_subFlagB_T, _subFlagB_T_1) @[FP8_ADD.scala 37:38]
    wire ovrChk_a : UInt<4> @[FP8_ADD.scala 40:22]
    wire ovrChk_s : UInt<4> @[FP8_ADD.scala 41:22]
    ovrChk_a <= UInt<1>("h0") @[FP8_ADD.scala 43:12]
    ovrChk_s <= UInt<1>("h0") @[FP8_ADD.scala 44:12]
    wire ovrChk_a_n : UInt<3> @[FP8_ADD.scala 47:24]
    wire ovrChk_s_n : UInt<3> @[FP8_ADD.scala 48:24]
    ovrChk_a_n <= UInt<1>("h0") @[FP8_ADD.scala 49:14]
    ovrChk_s_n <= UInt<1>("h0") @[FP8_ADD.scala 50:14]
    node _T = and(zeroFlagA, zeroFlagB) @[FP8_ADD.scala 52:19]
    when _T : @[FP8_ADD.scala 52:32]
      io.output <= UInt<1>("h0") @[FP8_ADD.scala 54:15]
    else :
      node _T_1 = or(zeroFlagA, zeroFlagB) @[FP8_ADD.scala 55:24]
      when _T_1 : @[FP8_ADD.scala 55:37]
        node _io_output_T = mux(zeroFlagA, io.inputB, io.inputA) @[FP8_ADD.scala 56:21]
        io.output <= _io_output_T @[FP8_ADD.scala 56:15]
      else :
        node _T_2 = or(infFlagA, infFlagB) @[FP8_ADD.scala 57:23]
        when _T_2 : @[FP8_ADD.scala 57:35]
          node _T_3 = and(infFlagA, infFlagB) @[FP8_ADD.scala 59:20]
          node _T_4 = neq(signA, signB) @[FP8_ADD.scala 59:42]
          node _T_5 = and(_T_3, _T_4) @[FP8_ADD.scala 59:32]
          when _T_5 : @[FP8_ADD.scala 59:53]
            io.output <= UInt<7>("h7f") @[FP8_ADD.scala 60:17]
          else :
            node _io_output_T_1 = mux(infFlagA, io.inputA, io.inputB) @[FP8_ADD.scala 62:23]
            io.output <= _io_output_T_1 @[FP8_ADD.scala 62:17]
        else :
          node _T_6 = or(nanFlagA, nanFlagB) @[FP8_ADD.scala 64:23]
          when _T_6 : @[FP8_ADD.scala 64:35]
            io.output <= UInt<7>("h7f") @[FP8_ADD.scala 65:15]
          else :
            node _T_7 = and(subFlagA, subFlagB) @[FP8_ADD.scala 68:19]
            when _T_7 : @[FP8_ADD.scala 68:31]
              node _T_8 = gt(sigA, sigB) @[FP8_ADD.scala 71:17]
              when _T_8 : @[FP8_ADD.scala 71:24]
                node _ovrChk_a_n_T = cat(UInt<1>("h0"), sigA) @[Cat.scala 33:92]
                node _ovrChk_a_n_T_1 = cat(UInt<1>("h0"), sigB) @[Cat.scala 33:92]
                node _ovrChk_a_n_T_2 = add(_ovrChk_a_n_T, _ovrChk_a_n_T_1) @[FP8_ADD.scala 72:38]
                ovrChk_a_n <= _ovrChk_a_n_T_2 @[FP8_ADD.scala 72:20]
                node _ovrChk_s_n_T = cat(UInt<1>("h0"), sigA) @[Cat.scala 33:92]
                node _ovrChk_s_n_T_1 = cat(UInt<1>("h0"), sigB) @[Cat.scala 33:92]
                node _ovrChk_s_n_T_2 = sub(_ovrChk_s_n_T, _ovrChk_s_n_T_1) @[FP8_ADD.scala 73:38]
                node _ovrChk_s_n_T_3 = tail(_ovrChk_s_n_T_2, 1) @[FP8_ADD.scala 73:38]
                ovrChk_s_n <= _ovrChk_s_n_T_3 @[FP8_ADD.scala 73:20]
                node _io_output_T_2 = eq(signA, UInt<1>("h0")) @[FP8_ADD.scala 74:32]
                node _io_output_T_3 = eq(signB, UInt<1>("h0")) @[FP8_ADD.scala 74:62]
                node _io_output_T_4 = bits(ovrChk_a_n, 2, 2) @[FP8_ADD.scala 74:92]
                node _io_output_T_5 = add(expA, _io_output_T_4) @[FP8_ADD.scala 74:80]
                node _io_output_T_6 = tail(_io_output_T_5, 1) @[FP8_ADD.scala 74:80]
                node _io_output_T_7 = bits(ovrChk_a_n, 2, 2) @[FP8_ADD.scala 74:122]
                node _io_output_T_8 = dshr(ovrChk_a_n, _io_output_T_7) @[FP8_ADD.scala 74:109]
                node _io_output_T_9 = bits(_io_output_T_8, 1, 0) @[FP8_ADD.scala 74:126]
                node _io_output_T_10 = cat(_io_output_T_6, _io_output_T_9) @[Cat.scala 33:92]
                node _io_output_T_11 = bits(ovrChk_s_n, 2, 2) @[FP8_ADD.scala 74:155]
                node _io_output_T_12 = add(expA, _io_output_T_11) @[FP8_ADD.scala 74:143]
                node _io_output_T_13 = tail(_io_output_T_12, 1) @[FP8_ADD.scala 74:143]
                node _io_output_T_14 = bits(ovrChk_s_n, 2, 2) @[FP8_ADD.scala 74:185]
                node _io_output_T_15 = dshr(ovrChk_s_n, _io_output_T_14) @[FP8_ADD.scala 74:172]
                node _io_output_T_16 = bits(_io_output_T_15, 1, 0) @[FP8_ADD.scala 74:189]
                node _io_output_T_17 = cat(_io_output_T_13, _io_output_T_16) @[Cat.scala 33:92]
                node _io_output_T_18 = mux(_io_output_T_3, _io_output_T_10, _io_output_T_17) @[FP8_ADD.scala 74:55]
                node _io_output_T_19 = cat(signA, _io_output_T_18) @[Cat.scala 33:92]
                node _io_output_T_20 = eq(signB, UInt<1>("h0")) @[FP8_ADD.scala 74:220]
                node _io_output_T_21 = bits(ovrChk_s_n, 2, 2) @[FP8_ADD.scala 74:250]
                node _io_output_T_22 = add(expA, _io_output_T_21) @[FP8_ADD.scala 74:238]
                node _io_output_T_23 = tail(_io_output_T_22, 1) @[FP8_ADD.scala 74:238]
                node _io_output_T_24 = bits(ovrChk_s_n, 2, 2) @[FP8_ADD.scala 74:280]
                node _io_output_T_25 = dshr(ovrChk_s_n, _io_output_T_24) @[FP8_ADD.scala 74:267]
                node _io_output_T_26 = bits(_io_output_T_25, 1, 0) @[FP8_ADD.scala 74:284]
                node _io_output_T_27 = cat(_io_output_T_23, _io_output_T_26) @[Cat.scala 33:92]
                node _io_output_T_28 = bits(ovrChk_a_n, 2, 2) @[FP8_ADD.scala 74:313]
                node _io_output_T_29 = add(expA, _io_output_T_28) @[FP8_ADD.scala 74:301]
                node _io_output_T_30 = tail(_io_output_T_29, 1) @[FP8_ADD.scala 74:301]
                node _io_output_T_31 = bits(ovrChk_a_n, 2, 2) @[FP8_ADD.scala 74:343]
                node _io_output_T_32 = dshr(ovrChk_a_n, _io_output_T_31) @[FP8_ADD.scala 74:330]
                node _io_output_T_33 = bits(_io_output_T_32, 1, 0) @[FP8_ADD.scala 74:347]
                node _io_output_T_34 = cat(_io_output_T_30, _io_output_T_33) @[Cat.scala 33:92]
                node _io_output_T_35 = mux(_io_output_T_20, _io_output_T_27, _io_output_T_34) @[FP8_ADD.scala 74:213]
                node _io_output_T_36 = cat(signA, _io_output_T_35) @[Cat.scala 33:92]
                node _io_output_T_37 = mux(_io_output_T_2, _io_output_T_19, _io_output_T_36) @[FP8_ADD.scala 74:25]
                io.output <= _io_output_T_37 @[FP8_ADD.scala 74:19]
              else :
                node _T_9 = gt(sigB, sigA) @[FP8_ADD.scala 75:23]
                when _T_9 : @[FP8_ADD.scala 75:30]
                  node _ovrChk_a_n_T_3 = cat(UInt<1>("h0"), sigB) @[Cat.scala 33:92]
                  node _ovrChk_a_n_T_4 = cat(UInt<1>("h0"), sigA) @[Cat.scala 33:92]
                  node _ovrChk_a_n_T_5 = add(_ovrChk_a_n_T_3, _ovrChk_a_n_T_4) @[FP8_ADD.scala 76:38]
                  ovrChk_a_n <= _ovrChk_a_n_T_5 @[FP8_ADD.scala 76:20]
                  node _ovrChk_s_n_T_4 = cat(UInt<1>("h0"), sigB) @[Cat.scala 33:92]
                  node _ovrChk_s_n_T_5 = cat(UInt<1>("h0"), sigA) @[Cat.scala 33:92]
                  node _ovrChk_s_n_T_6 = sub(_ovrChk_s_n_T_4, _ovrChk_s_n_T_5) @[FP8_ADD.scala 77:38]
                  node _ovrChk_s_n_T_7 = tail(_ovrChk_s_n_T_6, 1) @[FP8_ADD.scala 77:38]
                  ovrChk_s_n <= _ovrChk_s_n_T_7 @[FP8_ADD.scala 77:20]
                  io.output <= UInt<1>("h0") @[FP8_ADD.scala 78:19]
                else :
                  node _ovrChk_a_n_T_6 = cat(UInt<1>("h0"), sigB) @[Cat.scala 33:92]
                  node _ovrChk_a_n_T_7 = cat(UInt<1>("h0"), sigA) @[Cat.scala 33:92]
                  node _ovrChk_a_n_T_8 = add(_ovrChk_a_n_T_6, _ovrChk_a_n_T_7) @[FP8_ADD.scala 80:38]
                  ovrChk_a_n <= _ovrChk_a_n_T_8 @[FP8_ADD.scala 80:20]
                  node _ovrChk_s_n_T_8 = cat(UInt<1>("h0"), sigB) @[Cat.scala 33:92]
                  node _ovrChk_s_n_T_9 = cat(UInt<1>("h0"), sigA) @[Cat.scala 33:92]
                  node _ovrChk_s_n_T_10 = sub(_ovrChk_s_n_T_8, _ovrChk_s_n_T_9) @[FP8_ADD.scala 81:38]
                  node _ovrChk_s_n_T_11 = tail(_ovrChk_s_n_T_10, 1) @[FP8_ADD.scala 81:38]
                  ovrChk_s_n <= _ovrChk_s_n_T_11 @[FP8_ADD.scala 81:20]
                  io.output <= UInt<1>("h0") @[FP8_ADD.scala 82:19]
            else :
              node _T_10 = eq(subFlagA, UInt<1>("h0")) @[FP8_ADD.scala 86:16]
              node _T_11 = eq(subFlagB, UInt<1>("h0")) @[FP8_ADD.scala 86:29]
              node _T_12 = and(_T_10, _T_11) @[FP8_ADD.scala 86:26]
              when _T_12 : @[FP8_ADD.scala 86:39]
                node _T_13 = gt(expA, expB) @[FP8_ADD.scala 94:17]
                when _T_13 : @[FP8_ADD.scala 94:24]
                  node _ovrChk_a_T = cat(UInt<1>("h1"), sigA) @[Cat.scala 33:92]
                  node _ovrChk_a_T_1 = cat(UInt<1>("h1"), sigB) @[Cat.scala 33:92]
                  node _ovrChk_a_T_2 = sub(expA, expB) @[FP8_ADD.scala 96:64]
                  node _ovrChk_a_T_3 = tail(_ovrChk_a_T_2, 1) @[FP8_ADD.scala 96:64]
                  node _ovrChk_a_T_4 = dshr(_ovrChk_a_T_1, _ovrChk_a_T_3) @[FP8_ADD.scala 96:55]
                  node _ovrChk_a_T_5 = add(_ovrChk_a_T, _ovrChk_a_T_4) @[FP8_ADD.scala 96:36]
                  ovrChk_a <= _ovrChk_a_T_5 @[FP8_ADD.scala 96:18]
                  node _ovrChk_s_T = cat(UInt<1>("h1"), sigA) @[Cat.scala 33:92]
                  node _ovrChk_s_T_1 = cat(UInt<1>("h1"), sigB) @[Cat.scala 33:92]
                  node _ovrChk_s_T_2 = sub(expA, expB) @[FP8_ADD.scala 97:63]
                  node _ovrChk_s_T_3 = tail(_ovrChk_s_T_2, 1) @[FP8_ADD.scala 97:63]
                  node _ovrChk_s_T_4 = dshr(_ovrChk_s_T_1, _ovrChk_s_T_3) @[FP8_ADD.scala 97:54]
                  node _ovrChk_s_T_5 = sub(_ovrChk_s_T, _ovrChk_s_T_4) @[FP8_ADD.scala 97:36]
                  node _ovrChk_s_T_6 = tail(_ovrChk_s_T_5, 1) @[FP8_ADD.scala 97:36]
                  ovrChk_s <= _ovrChk_s_T_6 @[FP8_ADD.scala 97:18]
                  node _io_output_T_38 = eq(signA, UInt<1>("h0")) @[FP8_ADD.scala 98:32]
                  node _io_output_T_39 = eq(signB, UInt<1>("h0")) @[FP8_ADD.scala 98:62]
                  node _io_output_T_40 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 98:90]
                  node _io_output_T_41 = add(expA, _io_output_T_40) @[FP8_ADD.scala 98:80]
                  node _io_output_T_42 = tail(_io_output_T_41, 1) @[FP8_ADD.scala 98:80]
                  node _io_output_T_43 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 98:116]
                  node _io_output_T_44 = dshr(ovrChk_a, _io_output_T_43) @[FP8_ADD.scala 98:105]
                  node _io_output_T_45 = bits(_io_output_T_44, 1, 0) @[FP8_ADD.scala 98:120]
                  node _io_output_T_46 = cat(_io_output_T_42, _io_output_T_45) @[Cat.scala 33:92]
                  node _io_output_T_47 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 98:147]
                  node _io_output_T_48 = add(expA, _io_output_T_47) @[FP8_ADD.scala 98:137]
                  node _io_output_T_49 = tail(_io_output_T_48, 1) @[FP8_ADD.scala 98:137]
                  node _io_output_T_50 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 98:173]
                  node _io_output_T_51 = dshr(ovrChk_s, _io_output_T_50) @[FP8_ADD.scala 98:162]
                  node _io_output_T_52 = bits(_io_output_T_51, 1, 0) @[FP8_ADD.scala 98:177]
                  node _io_output_T_53 = cat(_io_output_T_49, _io_output_T_52) @[Cat.scala 33:92]
                  node _io_output_T_54 = mux(_io_output_T_39, _io_output_T_46, _io_output_T_53) @[FP8_ADD.scala 98:55]
                  node _io_output_T_55 = cat(signA, _io_output_T_54) @[Cat.scala 33:92]
                  node _io_output_T_56 = eq(signB, UInt<1>("h0")) @[FP8_ADD.scala 98:208]
                  node _io_output_T_57 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 98:236]
                  node _io_output_T_58 = add(expA, _io_output_T_57) @[FP8_ADD.scala 98:226]
                  node _io_output_T_59 = tail(_io_output_T_58, 1) @[FP8_ADD.scala 98:226]
                  node _io_output_T_60 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 98:262]
                  node _io_output_T_61 = dshr(ovrChk_s, _io_output_T_60) @[FP8_ADD.scala 98:251]
                  node _io_output_T_62 = bits(_io_output_T_61, 1, 0) @[FP8_ADD.scala 98:266]
                  node _io_output_T_63 = cat(_io_output_T_59, _io_output_T_62) @[Cat.scala 33:92]
                  node _io_output_T_64 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 98:293]
                  node _io_output_T_65 = add(expA, _io_output_T_64) @[FP8_ADD.scala 98:283]
                  node _io_output_T_66 = tail(_io_output_T_65, 1) @[FP8_ADD.scala 98:283]
                  node _io_output_T_67 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 98:319]
                  node _io_output_T_68 = dshr(ovrChk_a, _io_output_T_67) @[FP8_ADD.scala 98:308]
                  node _io_output_T_69 = bits(_io_output_T_68, 1, 0) @[FP8_ADD.scala 98:323]
                  node _io_output_T_70 = cat(_io_output_T_66, _io_output_T_69) @[Cat.scala 33:92]
                  node _io_output_T_71 = mux(_io_output_T_56, _io_output_T_63, _io_output_T_70) @[FP8_ADD.scala 98:201]
                  node _io_output_T_72 = cat(signA, _io_output_T_71) @[Cat.scala 33:92]
                  node _io_output_T_73 = mux(_io_output_T_38, _io_output_T_55, _io_output_T_72) @[FP8_ADD.scala 98:25]
                  io.output <= _io_output_T_73 @[FP8_ADD.scala 98:19]
                else :
                  node _T_14 = gt(expB, expA) @[FP8_ADD.scala 100:23]
                  when _T_14 : @[FP8_ADD.scala 100:30]
                    node _ovrChk_a_T_6 = cat(UInt<1>("h1"), sigB) @[Cat.scala 33:92]
                    node _ovrChk_a_T_7 = cat(UInt<1>("h1"), sigA) @[Cat.scala 33:92]
                    node _ovrChk_a_T_8 = sub(expB, expA) @[FP8_ADD.scala 102:64]
                    node _ovrChk_a_T_9 = tail(_ovrChk_a_T_8, 1) @[FP8_ADD.scala 102:64]
                    node _ovrChk_a_T_10 = dshr(_ovrChk_a_T_7, _ovrChk_a_T_9) @[FP8_ADD.scala 102:55]
                    node _ovrChk_a_T_11 = add(_ovrChk_a_T_6, _ovrChk_a_T_10) @[FP8_ADD.scala 102:36]
                    ovrChk_a <= _ovrChk_a_T_11 @[FP8_ADD.scala 102:18]
                    node _ovrChk_s_T_7 = cat(UInt<1>("h1"), sigB) @[Cat.scala 33:92]
                    node _ovrChk_s_T_8 = cat(UInt<1>("h1"), sigA) @[Cat.scala 33:92]
                    node _ovrChk_s_T_9 = sub(expB, expA) @[FP8_ADD.scala 103:63]
                    node _ovrChk_s_T_10 = tail(_ovrChk_s_T_9, 1) @[FP8_ADD.scala 103:63]
                    node _ovrChk_s_T_11 = dshr(_ovrChk_s_T_8, _ovrChk_s_T_10) @[FP8_ADD.scala 103:54]
                    node _ovrChk_s_T_12 = sub(_ovrChk_s_T_7, _ovrChk_s_T_11) @[FP8_ADD.scala 103:36]
                    node _ovrChk_s_T_13 = tail(_ovrChk_s_T_12, 1) @[FP8_ADD.scala 103:36]
                    ovrChk_s <= _ovrChk_s_T_13 @[FP8_ADD.scala 103:18]
                    node _io_output_T_74 = eq(signB, UInt<1>("h0")) @[FP8_ADD.scala 104:32]
                    node _io_output_T_75 = eq(signA, UInt<1>("h0")) @[FP8_ADD.scala 104:62]
                    node _io_output_T_76 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 104:90]
                    node _io_output_T_77 = add(expB, _io_output_T_76) @[FP8_ADD.scala 104:80]
                    node _io_output_T_78 = tail(_io_output_T_77, 1) @[FP8_ADD.scala 104:80]
                    node _io_output_T_79 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 104:116]
                    node _io_output_T_80 = dshr(ovrChk_a, _io_output_T_79) @[FP8_ADD.scala 104:105]
                    node _io_output_T_81 = bits(_io_output_T_80, 1, 0) @[FP8_ADD.scala 104:120]
                    node _io_output_T_82 = cat(_io_output_T_78, _io_output_T_81) @[Cat.scala 33:92]
                    node _io_output_T_83 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 104:147]
                    node _io_output_T_84 = add(expB, _io_output_T_83) @[FP8_ADD.scala 104:137]
                    node _io_output_T_85 = tail(_io_output_T_84, 1) @[FP8_ADD.scala 104:137]
                    node _io_output_T_86 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 104:173]
                    node _io_output_T_87 = dshr(ovrChk_s, _io_output_T_86) @[FP8_ADD.scala 104:162]
                    node _io_output_T_88 = bits(_io_output_T_87, 1, 0) @[FP8_ADD.scala 104:177]
                    node _io_output_T_89 = cat(_io_output_T_85, _io_output_T_88) @[Cat.scala 33:92]
                    node _io_output_T_90 = mux(_io_output_T_75, _io_output_T_82, _io_output_T_89) @[FP8_ADD.scala 104:55]
                    node _io_output_T_91 = cat(signB, _io_output_T_90) @[Cat.scala 33:92]
                    node _io_output_T_92 = eq(signA, UInt<1>("h0")) @[FP8_ADD.scala 104:208]
                    node _io_output_T_93 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 104:236]
                    node _io_output_T_94 = add(expB, _io_output_T_93) @[FP8_ADD.scala 104:226]
                    node _io_output_T_95 = tail(_io_output_T_94, 1) @[FP8_ADD.scala 104:226]
                    node _io_output_T_96 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 104:262]
                    node _io_output_T_97 = dshr(ovrChk_s, _io_output_T_96) @[FP8_ADD.scala 104:251]
                    node _io_output_T_98 = bits(_io_output_T_97, 1, 0) @[FP8_ADD.scala 104:266]
                    node _io_output_T_99 = cat(_io_output_T_95, _io_output_T_98) @[Cat.scala 33:92]
                    node _io_output_T_100 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 104:293]
                    node _io_output_T_101 = add(expB, _io_output_T_100) @[FP8_ADD.scala 104:283]
                    node _io_output_T_102 = tail(_io_output_T_101, 1) @[FP8_ADD.scala 104:283]
                    node _io_output_T_103 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 104:319]
                    node _io_output_T_104 = dshr(ovrChk_a, _io_output_T_103) @[FP8_ADD.scala 104:308]
                    node _io_output_T_105 = bits(_io_output_T_104, 1, 0) @[FP8_ADD.scala 104:323]
                    node _io_output_T_106 = cat(_io_output_T_102, _io_output_T_105) @[Cat.scala 33:92]
                    node _io_output_T_107 = mux(_io_output_T_92, _io_output_T_99, _io_output_T_106) @[FP8_ADD.scala 104:201]
                    node _io_output_T_108 = cat(signB, _io_output_T_107) @[Cat.scala 33:92]
                    node _io_output_T_109 = mux(_io_output_T_74, _io_output_T_91, _io_output_T_108) @[FP8_ADD.scala 104:25]
                    io.output <= _io_output_T_109 @[FP8_ADD.scala 104:19]
                  else :
                    node _ovrChk_a_T_12 = cat(UInt<1>("h1"), sigB) @[Cat.scala 33:92]
                    node _ovrChk_a_T_13 = cat(UInt<1>("h1"), sigA) @[Cat.scala 33:92]
                    node _ovrChk_a_T_14 = sub(expB, expA) @[FP8_ADD.scala 107:64]
                    node _ovrChk_a_T_15 = tail(_ovrChk_a_T_14, 1) @[FP8_ADD.scala 107:64]
                    node _ovrChk_a_T_16 = dshr(_ovrChk_a_T_13, _ovrChk_a_T_15) @[FP8_ADD.scala 107:55]
                    node _ovrChk_a_T_17 = add(_ovrChk_a_T_12, _ovrChk_a_T_16) @[FP8_ADD.scala 107:36]
                    ovrChk_a <= _ovrChk_a_T_17 @[FP8_ADD.scala 107:18]
                    node _ovrChk_s_T_14 = cat(UInt<1>("h1"), sigB) @[Cat.scala 33:92]
                    node _ovrChk_s_T_15 = cat(UInt<1>("h1"), sigA) @[Cat.scala 33:92]
                    node _ovrChk_s_T_16 = sub(expB, expA) @[FP8_ADD.scala 108:63]
                    node _ovrChk_s_T_17 = tail(_ovrChk_s_T_16, 1) @[FP8_ADD.scala 108:63]
                    node _ovrChk_s_T_18 = dshr(_ovrChk_s_T_15, _ovrChk_s_T_17) @[FP8_ADD.scala 108:54]
                    node _ovrChk_s_T_19 = sub(_ovrChk_s_T_14, _ovrChk_s_T_18) @[FP8_ADD.scala 108:36]
                    node _ovrChk_s_T_20 = tail(_ovrChk_s_T_19, 1) @[FP8_ADD.scala 108:36]
                    ovrChk_s <= _ovrChk_s_T_20 @[FP8_ADD.scala 108:18]
                    node _T_15 = gt(sigA, sigB) @[FP8_ADD.scala 110:19]
                    when _T_15 : @[FP8_ADD.scala 110:26]
                      node _io_output_T_110 = eq(signA, UInt<1>("h0")) @[FP8_ADD.scala 111:34]
                      node _io_output_T_111 = eq(signB, UInt<1>("h0")) @[FP8_ADD.scala 111:64]
                      node _io_output_T_112 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 111:92]
                      node _io_output_T_113 = add(expA, _io_output_T_112) @[FP8_ADD.scala 111:82]
                      node _io_output_T_114 = tail(_io_output_T_113, 1) @[FP8_ADD.scala 111:82]
                      node _io_output_T_115 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 111:118]
                      node _io_output_T_116 = dshr(ovrChk_a, _io_output_T_115) @[FP8_ADD.scala 111:107]
                      node _io_output_T_117 = bits(_io_output_T_116, 1, 0) @[FP8_ADD.scala 111:122]
                      node _io_output_T_118 = cat(_io_output_T_114, _io_output_T_117) @[Cat.scala 33:92]
                      node _io_output_T_119 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 111:149]
                      node _io_output_T_120 = add(expA, _io_output_T_119) @[FP8_ADD.scala 111:139]
                      node _io_output_T_121 = tail(_io_output_T_120, 1) @[FP8_ADD.scala 111:139]
                      node _io_output_T_122 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 111:175]
                      node _io_output_T_123 = dshr(ovrChk_s, _io_output_T_122) @[FP8_ADD.scala 111:164]
                      node _io_output_T_124 = bits(_io_output_T_123, 1, 0) @[FP8_ADD.scala 111:179]
                      node _io_output_T_125 = cat(_io_output_T_121, _io_output_T_124) @[Cat.scala 33:92]
                      node _io_output_T_126 = mux(_io_output_T_111, _io_output_T_118, _io_output_T_125) @[FP8_ADD.scala 111:57]
                      node _io_output_T_127 = cat(signA, _io_output_T_126) @[Cat.scala 33:92]
                      node _io_output_T_128 = eq(signB, UInt<1>("h0")) @[FP8_ADD.scala 111:210]
                      node _io_output_T_129 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 111:238]
                      node _io_output_T_130 = add(expA, _io_output_T_129) @[FP8_ADD.scala 111:228]
                      node _io_output_T_131 = tail(_io_output_T_130, 1) @[FP8_ADD.scala 111:228]
                      node _io_output_T_132 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 111:264]
                      node _io_output_T_133 = dshr(ovrChk_s, _io_output_T_132) @[FP8_ADD.scala 111:253]
                      node _io_output_T_134 = bits(_io_output_T_133, 1, 0) @[FP8_ADD.scala 111:268]
                      node _io_output_T_135 = cat(_io_output_T_131, _io_output_T_134) @[Cat.scala 33:92]
                      node _io_output_T_136 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 111:295]
                      node _io_output_T_137 = add(expA, _io_output_T_136) @[FP8_ADD.scala 111:285]
                      node _io_output_T_138 = tail(_io_output_T_137, 1) @[FP8_ADD.scala 111:285]
                      node _io_output_T_139 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 111:321]
                      node _io_output_T_140 = dshr(ovrChk_a, _io_output_T_139) @[FP8_ADD.scala 111:310]
                      node _io_output_T_141 = bits(_io_output_T_140, 1, 0) @[FP8_ADD.scala 111:325]
                      node _io_output_T_142 = cat(_io_output_T_138, _io_output_T_141) @[Cat.scala 33:92]
                      node _io_output_T_143 = mux(_io_output_T_128, _io_output_T_135, _io_output_T_142) @[FP8_ADD.scala 111:203]
                      node _io_output_T_144 = cat(signA, _io_output_T_143) @[Cat.scala 33:92]
                      node _io_output_T_145 = mux(_io_output_T_110, _io_output_T_127, _io_output_T_144) @[FP8_ADD.scala 111:27]
                      io.output <= _io_output_T_145 @[FP8_ADD.scala 111:21]
                    else :
                      node _T_16 = gt(sigB, sigA) @[FP8_ADD.scala 113:25]
                      when _T_16 : @[FP8_ADD.scala 113:32]
                        node _io_output_T_146 = eq(signB, UInt<1>("h0")) @[FP8_ADD.scala 114:34]
                        node _io_output_T_147 = eq(signA, UInt<1>("h0")) @[FP8_ADD.scala 114:64]
                        node _io_output_T_148 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 114:92]
                        node _io_output_T_149 = add(expB, _io_output_T_148) @[FP8_ADD.scala 114:82]
                        node _io_output_T_150 = tail(_io_output_T_149, 1) @[FP8_ADD.scala 114:82]
                        node _io_output_T_151 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 114:118]
                        node _io_output_T_152 = dshr(ovrChk_a, _io_output_T_151) @[FP8_ADD.scala 114:107]
                        node _io_output_T_153 = bits(_io_output_T_152, 1, 0) @[FP8_ADD.scala 114:122]
                        node _io_output_T_154 = cat(_io_output_T_150, _io_output_T_153) @[Cat.scala 33:92]
                        node _io_output_T_155 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 114:149]
                        node _io_output_T_156 = add(expB, _io_output_T_155) @[FP8_ADD.scala 114:139]
                        node _io_output_T_157 = tail(_io_output_T_156, 1) @[FP8_ADD.scala 114:139]
                        node _io_output_T_158 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 114:175]
                        node _io_output_T_159 = dshr(ovrChk_s, _io_output_T_158) @[FP8_ADD.scala 114:164]
                        node _io_output_T_160 = bits(_io_output_T_159, 1, 0) @[FP8_ADD.scala 114:179]
                        node _io_output_T_161 = cat(_io_output_T_157, _io_output_T_160) @[Cat.scala 33:92]
                        node _io_output_T_162 = mux(_io_output_T_147, _io_output_T_154, _io_output_T_161) @[FP8_ADD.scala 114:57]
                        node _io_output_T_163 = cat(signB, _io_output_T_162) @[Cat.scala 33:92]
                        node _io_output_T_164 = eq(signA, UInt<1>("h0")) @[FP8_ADD.scala 114:210]
                        node _io_output_T_165 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 114:238]
                        node _io_output_T_166 = add(expB, _io_output_T_165) @[FP8_ADD.scala 114:228]
                        node _io_output_T_167 = tail(_io_output_T_166, 1) @[FP8_ADD.scala 114:228]
                        node _io_output_T_168 = bits(ovrChk_s, 3, 3) @[FP8_ADD.scala 114:264]
                        node _io_output_T_169 = dshr(ovrChk_s, _io_output_T_168) @[FP8_ADD.scala 114:253]
                        node _io_output_T_170 = bits(_io_output_T_169, 1, 0) @[FP8_ADD.scala 114:268]
                        node _io_output_T_171 = cat(_io_output_T_167, _io_output_T_170) @[Cat.scala 33:92]
                        node _io_output_T_172 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 114:295]
                        node _io_output_T_173 = add(expB, _io_output_T_172) @[FP8_ADD.scala 114:285]
                        node _io_output_T_174 = tail(_io_output_T_173, 1) @[FP8_ADD.scala 114:285]
                        node _io_output_T_175 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 114:321]
                        node _io_output_T_176 = dshr(ovrChk_a, _io_output_T_175) @[FP8_ADD.scala 114:310]
                        node _io_output_T_177 = bits(_io_output_T_176, 1, 0) @[FP8_ADD.scala 114:325]
                        node _io_output_T_178 = cat(_io_output_T_174, _io_output_T_177) @[Cat.scala 33:92]
                        node _io_output_T_179 = mux(_io_output_T_164, _io_output_T_171, _io_output_T_178) @[FP8_ADD.scala 114:203]
                        node _io_output_T_180 = cat(signB, _io_output_T_179) @[Cat.scala 33:92]
                        node _io_output_T_181 = mux(_io_output_T_146, _io_output_T_163, _io_output_T_180) @[FP8_ADD.scala 114:27]
                        io.output <= _io_output_T_181 @[FP8_ADD.scala 114:21]
                      else :
                        node _io_output_T_182 = neq(signA, signB) @[FP8_ADD.scala 117:34]
                        node _io_output_T_183 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 117:76]
                        node _io_output_T_184 = add(expA, _io_output_T_183) @[FP8_ADD.scala 117:66]
                        node _io_output_T_185 = tail(_io_output_T_184, 1) @[FP8_ADD.scala 117:66]
                        node _io_output_T_186 = bits(ovrChk_a, 3, 3) @[FP8_ADD.scala 117:102]
                        node _io_output_T_187 = dshr(ovrChk_a, _io_output_T_186) @[FP8_ADD.scala 117:91]
                        node _io_output_T_188 = bits(_io_output_T_187, 1, 0) @[FP8_ADD.scala 117:106]
                        node io_output_hi = cat(signA, _io_output_T_185) @[Cat.scala 33:92]
                        node _io_output_T_189 = cat(io_output_hi, _io_output_T_188) @[Cat.scala 33:92]
                        node _io_output_T_190 = mux(_io_output_T_182, UInt<1>("h0"), _io_output_T_189) @[FP8_ADD.scala 117:27]
                        io.output <= _io_output_T_190 @[FP8_ADD.scala 117:21]
              else :
                io.output <= UInt<1>("h0") @[FP8_ADD.scala 127:17]


