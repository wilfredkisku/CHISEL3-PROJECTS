circuit FP16Add :
  module FP16Add :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip a : UInt<16>, flip b : UInt<16>, result : UInt<16>}

    node signA = bits(io.a, 15, 15) @[FP16Add.scala 13:18]
    node expA = bits(io.a, 14, 10) @[FP16Add.scala 14:22]
    node sigA = bits(io.a, 9, 0) @[FP16Add.scala 15:25]
    node signB = bits(io.b, 15, 15) @[FP16Add.scala 13:18]
    node expB = bits(io.b, 14, 10) @[FP16Add.scala 14:22]
    node sigB = bits(io.b, 9, 0) @[FP16Add.scala 15:25]
    node _zeroFlagA_T = eq(expA, UInt<1>("h0")) @[FP16Add.scala 38:24]
    node _zeroFlagA_T_1 = eq(sigA, UInt<1>("h0")) @[FP16Add.scala 38:40]
    node zeroFlagA = and(_zeroFlagA_T, _zeroFlagA_T_1) @[FP16Add.scala 38:32]
    node _zeroFlagB_T = eq(expB, UInt<1>("h0")) @[FP16Add.scala 39:24]
    node _zeroFlagB_T_1 = eq(sigB, UInt<1>("h0")) @[FP16Add.scala 39:40]
    node zeroFlagB = and(_zeroFlagB_T, _zeroFlagB_T_1) @[FP16Add.scala 39:32]
    node _infFlagA_T = eq(expA, UInt<5>("h1f")) @[FP16Add.scala 41:23]
    node _infFlagA_T_1 = eq(sigA, UInt<1>("h0")) @[FP16Add.scala 41:46]
    node infFlagA = and(_infFlagA_T, _infFlagA_T_1) @[FP16Add.scala 41:38]
    node _infFlagB_T = eq(expB, UInt<5>("h1f")) @[FP16Add.scala 42:23]
    node _infFlagB_T_1 = eq(sigB, UInt<1>("h0")) @[FP16Add.scala 42:46]
    node infFlagB = and(_infFlagB_T, _infFlagB_T_1) @[FP16Add.scala 42:38]
    node _T = and(zeroFlagA, zeroFlagB) @[FP16Add.scala 46:18]
    when _T : @[FP16Add.scala 46:32]
      io.result <= UInt<1>("h0") @[FP16Add.scala 48:17]
    else :
      node _T_1 = eq(zeroFlagA, UInt<1>("h0")) @[FP16Add.scala 50:16]
      node _T_2 = and(_T_1, zeroFlagB) @[FP16Add.scala 50:27]
      when _T_2 : @[FP16Add.scala 50:40]
        io.result <= io.a @[FP16Add.scala 52:17]
      else :
        node _T_3 = eq(zeroFlagB, UInt<1>("h0")) @[FP16Add.scala 53:30]
        node _T_4 = and(zeroFlagA, _T_3) @[FP16Add.scala 53:27]
        when _T_4 : @[FP16Add.scala 53:41]
          io.result <= io.b @[FP16Add.scala 55:17]
        else :
          node _T_5 = or(infFlagA, infFlagB) @[FP16Add.scala 56:26]
          when _T_5 : @[FP16Add.scala 56:38]
            node _T_6 = and(infFlagA, infFlagB) @[FP16Add.scala 58:21]
            node _T_7 = neq(signA, signB) @[FP16Add.scala 58:43]
            node _T_8 = and(_T_6, _T_7) @[FP16Add.scala 58:33]
            when _T_8 : @[FP16Add.scala 58:54]
              io.result <= UInt<15>("h7fff") @[FP16Add.scala 60:19]
            else :
              node _io_result_T = mux(infFlagA, io.a, io.b) @[FP16Add.scala 64:25]
              io.result <= _io_result_T @[FP16Add.scala 64:19]
          else :
            node _T_9 = gt(expA, expB) @[FP16Add.scala 69:17]
            when _T_9 : @[FP16Add.scala 69:24]
              io.result <= UInt<1>("h0") @[FP16Add.scala 72:19]
            else :
              node _T_10 = eq(expA, expB) @[FP16Add.scala 73:23]
              when _T_10 : @[FP16Add.scala 73:32]
                node _T_11 = gt(sigA, sigB) @[FP16Add.scala 75:21]
                when _T_11 : @[FP16Add.scala 75:28]
                  node _io_result_T_1 = eq(signA, UInt<1>("h0")) @[FP16Add.scala 76:34]
                  node _io_result_T_2 = eq(signB, UInt<1>("h0")) @[FP16Add.scala 76:53]
                  node _io_result_T_3 = add(sigA, sigB) @[FP16Add.scala 76:80]
                  node _io_result_T_4 = tail(_io_result_T_3, 1) @[FP16Add.scala 76:80]
                  node io_result_hi = cat(UInt<1>("h0"), expA) @[Cat.scala 33:92]
                  node _io_result_T_5 = cat(io_result_hi, _io_result_T_4) @[Cat.scala 33:92]
                  node _io_result_T_6 = sub(sigA, sigB) @[FP16Add.scala 76:109]
                  node _io_result_T_7 = tail(_io_result_T_6, 1) @[FP16Add.scala 76:109]
                  node io_result_hi_1 = cat(UInt<1>("h0"), expA) @[Cat.scala 33:92]
                  node _io_result_T_8 = cat(io_result_hi_1, _io_result_T_7) @[Cat.scala 33:92]
                  node _io_result_T_9 = mux(_io_result_T_2, _io_result_T_5, _io_result_T_8) @[FP16Add.scala 76:46]
                  node _io_result_T_10 = eq(signB, UInt<1>("h0")) @[FP16Add.scala 76:129]
                  node _io_result_T_11 = sub(sigA, sigB) @[FP16Add.scala 76:156]
                  node _io_result_T_12 = tail(_io_result_T_11, 1) @[FP16Add.scala 76:156]
                  node io_result_hi_2 = cat(UInt<1>("h1"), expA) @[Cat.scala 33:92]
                  node _io_result_T_13 = cat(io_result_hi_2, _io_result_T_12) @[Cat.scala 33:92]
                  node _io_result_T_14 = add(sigA, sigB) @[FP16Add.scala 76:185]
                  node _io_result_T_15 = tail(_io_result_T_14, 1) @[FP16Add.scala 76:185]
                  node io_result_hi_3 = cat(UInt<1>("h1"), expA) @[Cat.scala 33:92]
                  node _io_result_T_16 = cat(io_result_hi_3, _io_result_T_15) @[Cat.scala 33:92]
                  node _io_result_T_17 = mux(_io_result_T_10, _io_result_T_13, _io_result_T_16) @[FP16Add.scala 76:122]
                  node _io_result_T_18 = mux(_io_result_T_1, _io_result_T_9, _io_result_T_17) @[FP16Add.scala 76:27]
                  io.result <= _io_result_T_18 @[FP16Add.scala 76:21]
                else :
                  node _T_12 = gt(sigB, sigA) @[FP16Add.scala 78:27]
                  when _T_12 : @[FP16Add.scala 78:34]
                    node _io_result_T_19 = eq(signB, UInt<1>("h0")) @[FP16Add.scala 79:36]
                    node _io_result_T_20 = eq(signA, UInt<1>("h0")) @[FP16Add.scala 79:55]
                    node _io_result_T_21 = add(sigB, sigA) @[FP16Add.scala 79:82]
                    node _io_result_T_22 = tail(_io_result_T_21, 1) @[FP16Add.scala 79:82]
                    node io_result_hi_4 = cat(UInt<1>("h0"), expB) @[Cat.scala 33:92]
                    node _io_result_T_23 = cat(io_result_hi_4, _io_result_T_22) @[Cat.scala 33:92]
                    node _io_result_T_24 = sub(sigB, sigA) @[FP16Add.scala 79:111]
                    node _io_result_T_25 = tail(_io_result_T_24, 1) @[FP16Add.scala 79:111]
                    node io_result_hi_5 = cat(UInt<1>("h0"), expB) @[Cat.scala 33:92]
                    node _io_result_T_26 = cat(io_result_hi_5, _io_result_T_25) @[Cat.scala 33:92]
                    node _io_result_T_27 = mux(_io_result_T_20, _io_result_T_23, _io_result_T_26) @[FP16Add.scala 79:48]
                    node _io_result_T_28 = eq(signA, UInt<1>("h0")) @[FP16Add.scala 79:131]
                    node _io_result_T_29 = sub(sigB, sigA) @[FP16Add.scala 79:158]
                    node _io_result_T_30 = tail(_io_result_T_29, 1) @[FP16Add.scala 79:158]
                    node io_result_hi_6 = cat(UInt<1>("h1"), expB) @[Cat.scala 33:92]
                    node _io_result_T_31 = cat(io_result_hi_6, _io_result_T_30) @[Cat.scala 33:92]
                    node _io_result_T_32 = add(sigB, sigA) @[FP16Add.scala 79:187]
                    node _io_result_T_33 = tail(_io_result_T_32, 1) @[FP16Add.scala 79:187]
                    node io_result_hi_7 = cat(UInt<1>("h1"), expB) @[Cat.scala 33:92]
                    node _io_result_T_34 = cat(io_result_hi_7, _io_result_T_33) @[Cat.scala 33:92]
                    node _io_result_T_35 = mux(_io_result_T_28, _io_result_T_31, _io_result_T_34) @[FP16Add.scala 79:124]
                    node _io_result_T_36 = mux(_io_result_T_19, _io_result_T_27, _io_result_T_35) @[FP16Add.scala 79:29]
                    io.result <= _io_result_T_36 @[FP16Add.scala 79:23]
                  else :
                    io.result <= UInt<1>("h0") @[FP16Add.scala 82:22]
              else :
                io.result <= UInt<1>("h0") @[FP16Add.scala 86:19]


